buildscript {
    ext.kotlin_version = '1.2.0'
    ext.retrofit_version = '2.1.0'
    ext.junit_version = '4.12'
    ext.okhttp_version = '3.4.1'
    ext.truezip_version = '7.7.9'
    ext.log4j_version = '2.1'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

group 'io.github.ahill2013.willow'
version '1.0.3'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()  // pokekotlin jar
    jcenter()       // Discord4J
    maven {
        //url 'http://jcenter.bintray.com'    // pokekotlin jar
        url "https://jitpack.io"            // Discord4J
    }
}

dependencies {
    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // pokekotlin jar
    //compile 'me.sargunvohra.lib:pokekotlin:2.3.0'
    // pokekotlin src
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    compile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    compile "de.schlichtherle.truezip:truezip-file:$truezip_version"
    compile "de.schlichtherle.truezip:truezip-driver-zip:$truezip_version"
    // Discord4J
    compile "com.github.austinv11:Discord4J:2.9.3"
    // Log4j
    compile "org.apache.logging.log4j:log4j-api:$log4j_version"
    compile "org.apache.logging.log4j:log4j-core:$log4j_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
            'Implementation-Version': version,
            'Main-Class': 'io.github.ahill2013.willow.Willow'//,
            //'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
            //'Class-Path': '-Dlog4j.configurationFile="/home/adam/IdeaProjects/willow/log4j2.xml"'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}